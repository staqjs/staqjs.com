{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/components/private-route","result":{"data":{"mdx":{"id":"1fa4f9d5-2bfb-5eae-86cd-7fd7a4826a08","excerpt":"A wrapper around  <Route>  that will render its component argument if the user is signed in, and redirect to /signin otherwise. The arguments to  PrivateRouteâ€¦","fields":{"slug":"/components/private-route/"},"frontmatter":{"title":"PrivateRoute","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"PrivateRoute\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A wrapper around \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Route>\"), \" that will render its component argument if the user is signed in, and redirect to /signin otherwise.\"), mdx(\"p\", null, \"The arguments to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PrivateRoute\"), \" are the same as those to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Route\"), \", except render cannot be used with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PrivateRoute\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"// Create a publicly accessible landing page, and a user settings page that\\n// can only be accessed once a user is logged in\\n\\nimport { PrivateRoute } from '@staqjs/client'\\n\\n...\\n\\nreturn (\\n  <Router>\\n    <Route exact path=\\\"/\\\" component={LandingPage} />\\n    <PrivateRoute path=\\\"/user-settings\\\" component={UserSettingsPage} />\\n  </Router>\\n)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/components/private-route/","next":{"label":"Home","link":"/"},"githubEditUrl":"https://github.com/rocketseat/gatsby-themes/tree/master/examples/gatsby-theme-docs/src/docs/components/private-route.mdx"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}