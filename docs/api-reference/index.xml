<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API Reference on</title><link>/docs/api-reference/</link><description>Recent content in API Reference on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:49:15 +0000</lastBuildDate><atom:link href="/docs/api-reference/index.xml" rel="self" type="application/rss+xml"/><item><title>initStaq</title><link>/docs/api-reference/init-staq/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>/docs/api-reference/init-staq/</guid><description>initStaq is the function that initializes the Staq.js client library. It takes a configuration object which is used to set values for things like
the current template payments Firebase It should be called before ReactDOM.render.
Import import { initStaq } from &amp;#39;@staqjs/client&amp;#39; API The configuration object passed to initStaq supports the following properties:
SiteTitle type: string
Used as the value in the &amp;lt;title&amp;gt; tag of the site
BaseUrl type: string</description></item><item><title>withAuth</title><link>/docs/api-reference/with-auth/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>/docs/api-reference/with-auth/</guid><description>The withAuth function is a higher-order component that injects an auth prop into the component given to it as an argument. The auth prop has a reference to the logged in user, so this function is useful for wrapping components that use or display info based on the current user.
Import import { withAuth } from &amp;#39;@staqjs/client&amp;#39; API The auth prop supplied by withAuth supports the following properties.
currentUser type: object</description></item><item><title>withStaq</title><link>/docs/api-reference/with-staq/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>/docs/api-reference/with-staq/</guid><description>The withStaq function takes a rendered component tree and surrounds it with contexts that provide methods and data used by the Staq.js library. Specifically, the child component tree supplied as the argument is wrapped in a Provider for Firebase, Stripe, and Auth contexts.
Import import { withStaq } from &amp;#39;@staqjs/client&amp;#39; Example Usage The withStaq function should usually be called inside index.js, when the application is mounted on the DOM.
ReactDOM.render( withStaq( &amp;lt;ThemeProvider theme={Theme}&amp;gt; &amp;lt;App /&amp;gt; &amp;lt;/ThemeProvider&amp;gt; ), document.</description></item><item><title>withFirebase</title><link>/docs/api-reference/with-firebase/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>/docs/api-reference/with-firebase/</guid><description>The withFirebase function is a higher-order component that injects a firebase prop into the component given to it as an argument. The firebase prop provides access to methods for interacting with various Firebase services like Firestore and Authentication.
Import import { withFirebase } from &amp;#39;@staqjs/client&amp;#39; API The firebase prop supplied by withFirebase supports the following properties.
doCreateUserWithEmailAndPassword type: function
signature: (email: string, password: string) =&amp;gt; Promise&amp;lt;object&amp;gt;
This function takes an email and password and uses the Firebase Password-Based Accounts API to create a new user.</description></item><item><title>withStripe</title><link>/docs/api-reference/with-stripe/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>/docs/api-reference/with-stripe/</guid><description>The withStripe function is a higher-order component that injects a stripe prop into the component given to it as an argument. The stripe prop is an instance of the Stripe object, and should be used in components dealing with payment flows.
Import import { withStripe } from &amp;#39;@staqjs/client&amp;#39; Example Usage import { withStripe } from &amp;#39;@staqjs/client&amp;#39; function Dashboard(props) { const { stripe } = props // ... code ... } export default withStripe(Dashboard) Also see getStripeCheckoutSession</description></item><item><title>getStripeCheckoutSession</title><link>/docs/api-reference/get-stripe-checkout-session/</link><pubDate>Tue, 06 Oct 2020 08:49:31 +0000</pubDate><guid>/docs/api-reference/get-stripe-checkout-session/</guid><description>This function is a helper for creating a Stripe Checkout Session. It pings a corresponding backend function to create a short-term session that can be used to allow a customer to pay for one-time purchases or subscriptions through Stripe Checkout.
Import import { getStripeCheckoutSession } from &amp;#39;@staqjs/client&amp;#39; API type: function
signature: (uid: string, customerId: string, priceId: string) =&amp;gt; Promise&amp;lt;Session&amp;gt;
This function takes a user ID, a Stripe Customer ID, and a Stripe Price ID.</description></item></channel></rss>